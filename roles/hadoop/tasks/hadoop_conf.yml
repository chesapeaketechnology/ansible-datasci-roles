---
- name: Copy slaves into place
  template:
    src: slaves
    dest: /usr/local/hadoop/etc/hadoop/slaves
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"

- name: Prepare known_hosts entries - IPs
  shell: ssh-keyscan -t rsa "{{ hostvars[item]['private_ipv4_addresses'][0] }}"
  with_items:
    - "{{ groups[target_server_group] }}"
  register: keyscans_ips

- name: Prepare known_hosts entries - Hostnames
  shell: ssh-keyscan -t rsa "{{ item }}"
  with_items:
    - "{{ groups[target_server_group] }}"
  register: keyscans_hostnames


- name: Prepare known_hosts
  lineinfile:
    dest: "/home/{{ hadoop_user }}/.ssh/known_hosts"
    create: yes
    state: present
    line: "{{ item.stdout }}"
    regexp: "^{{ item.item }}"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
  with_items: "{{ keyscans_ips.results }}"

- name: Prepare known_hosts
  lineinfile:
    dest: "/home/{{ hadoop_user }}/.ssh/known_hosts"
    create: yes
    state: present
    line: "{{ item.stdout }}"
    regexp: "^{{ item.item }}"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"
  with_items: "{{ keyscans_hostnames.results }}"


- name: Prepare known_hosts entries
  shell: ssh-keyscan -t rsa 0.0.0.0
  register: keyscan_0_0_0_0

- name: Add 0.0.0.0 to known_hosts for secondary namenode
  lineinfile:
    dest: "/home/{{ hadoop_user }}/.ssh/known_hosts"
    create: yes
    state: present
    line: "{{ keyscan_0_0_0_0.stdout }}"
    regexp: "^0.0.0.0"
    owner: "{{ hadoop_user }}"
    group: "{{ hadoop_group }}"

- name: Drop successful config note
  file:
    path: "{{ stat_file }}"
    state: touch
