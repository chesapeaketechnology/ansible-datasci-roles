---
- name: "Configure nginx node"
  hosts: all
  become: true
  vars:
    certbot_admin_email: "{{ admin_email }}"
    certbot_create_if_missing: true
    certbot_auto_renew_user: "{{ admin_username }}"
    certbot_auto_renew_minute: "35"
    certbot_auto_renew_hour: "9"
    certbot_certs:
      - domains:
          - "{{ fqdn }}"
    nginx_conf_template: "{{ playbook_dir }}/templates/nginx.conf.j2"
    # certbot_create_command: >-
    #   {{ certbot_script }} certonly --standalone --dry-run --noninteractive --agree-tos
    #   --email {{ cert_item.email | default(certbot_admin_email) }}
    #   -d {{ cert_item.domains | join(',') }}
    nginx_vhosts: []

  pre_tasks:
    - name: "Update apt cache"
      apt: update_cache=true cache_valid_time=600
      when: ansible_os_family == 'Debian'
      changed_when: false

    - name: "Install dependencies (RedHat)"
      yum:
        name: ["cronie", "epel-release"]
        state: present
      when: ansible_os_family == 'RedHat'

    - name: "Install nginx-mod-stream"
      yum:
        name: nginx-mod-stream
        state: present
      when: ansible_os_family == 'RedHat'

    - name: "Install cron (Debian)"
      apt: name=cron state=present
      when: ansible_os_family == 'Debian'

    - name: "Install pip2"
      package:
        name: python-pip
        state: latest

    - name: "Upgrade pip2"
      shell: pip install --upgrade pip

    - name: "Install python-consul module"
      pip:
        name: python-consul

    - name: "Check if dhparam.pem exists"
      stat:
        path: /etc/ssl/certs/dhparam.pem
      register: dhparam

    - name: "Generate Diffie-Hellman parameter for DHE ciphersuites"
      shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
      when: not dhparam.stat.exists

    - name: "Unlock ports 1883, 8883, 80, 443, & 3000"
      shell: semanage port -a -t http_port_t -p tcp {{ item }}
      ignore_errors: yes
      with_items:
        - 1883
        - 8883
        - 80
        - 443
        - 3000
    - name: Wait for Consul to be available
      wait_for:
        port: 8500
        host: "{{ consul_server }}"
        delay: 120
        timeout: 1800
  roles:
    - role: geerlingguy.certbot
    - role: geerlingguy.nginx
    - {
        role: bdellegrazie.nginx_exporter,
        nginx_exporter_version: "0.8.0",
        nginx_exporter_tarball_checksum: "sha256:fce51ce62650186f9f4cb3ff13fa4b36ffc2980058a63bccdb471c929c078e50",
        nginx_exporter_options:
          [
            "-web.listen-address=0.0.0.0:9113",
            "-nginx.scrape-uri https://{{ fqdn }}/stats",
          ],
      }
    - {
        role: "{{ playbook_dir }}/roles/consul",
        private_ips: ["{{ consul_server }}"],
        is_server: false,
      }
    - role: "cloudalchemy.node-exporter"

  post_tasks:
    - block:
        - name: "Check if reverseproxy address exists in Consul"
          consul_kv:
            key: reverseproxy/fqdn
          register: reverseproxy_fqdn

        - name: "Store reverseproxy address"
          consul_kv:
            key: reverseproxy/fqdn
            value: "{{ fqdn }}"
          when: reverseproxy_fqdn.data is none

    - block:
        - name: "Check if reverseproxy admin username exists in Consul"
          consul_kv:
            key: reverseproxy/admin_user/name
          register: reverseproxy_username

        - name: "Store reverseproxy admin username"
          consul_kv:
            key: reverseproxy/admin_user/name
            value: "{{ admin_username }}"
          when: reverseproxy_username.data is none

    - block:
        - name: "Check if reverseproxy admin email exists in Consul"
          consul_kv:
            key: reverseproxy/admin_user/email
          register: reverseproxy_email

        - name: "Store reverseproxy admin email"
          consul_kv:
            key: reverseproxy/admin_user/email
            value: "{{ admin_email }}"
          when: reverseproxy_email.data is none
## store exporter info in Consul
